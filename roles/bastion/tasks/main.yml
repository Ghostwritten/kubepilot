# =============================================================================
# roles/bastion/tasks/main.yml - Bastion Host Configuration
# =============================================================================
---
- name: "Display bastion configuration phase"
  debug:
    msg: |
      üè∞ KubePilot Bastion Host Configuration
      =======================================
      Bastion: {{ inventory_hostname }}
      Configuring kubectl access and management tools...

- name: "Check if kubectl is installed on bastion"
  command: which kubectl
  register: kubectl_check
  failed_when: false
  changed_when: false

- name: "Install kubectl on bastion (if not installed)"
  block:
    - name: "Download kubectl binary (online mode)"
      get_url:
        url: "{{ kube_download_mirror }}/release/v{{ kube_version }}/bin/linux/{{ kube_download_arch }}/kubectl"
        dest: /usr/local/bin/kubectl
        mode: '0755'
        validate_certs: false
      when: offline_mode | default(false) == false

    - name: "Download kubectl binary (offline mode)"
      get_url:
        url: "{{ files_repo }}/kubectl"
        dest: /usr/local/bin/kubectl
        mode: '0755'
        validate_certs: false
      when: offline_mode | default(true) == true

    - name: "Verify kubectl installation"
      command: kubectl version --client
      register: kubectl_version
      changed_when: false
  when: kubectl_check.rc != 0

- name: "Create .kube directory on bastion"
  file:
    path: "{{ ansible_env.HOME }}/.kube"
    state: directory
    mode: '0755'

- name: "Copy kubeconfig from control plane to bastion"
  fetch:
    src: /etc/kubernetes/admin.conf
    dest: "{{ ansible_env.HOME }}/.kube/config"
    flat: yes
  delegate_to: "{{ groups['kube_control_plane'][0] }}"

- name: "Update kubeconfig server address for bastion access"
  replace:
    path: "{{ ansible_env.HOME }}/.kube/config"
    regexp: 'server: https://127\.0\.0\.1:6443'
    replace: "server: https://{{ hostvars[groups['kube_control_plane'][0]].ansible_host }}:6443"

- name: "Set proper permissions on kubeconfig"
  file:
    path: "{{ ansible_env.HOME }}/.kube/config"
    mode: '0600'

- name: "Test kubectl connectivity from bastion"
  command: kubectl cluster-info
  register: cluster_info
  changed_when: false

- name: "Display cluster information from bastion"
  debug:
    msg: |
      ‚úÖ Bastion kubectl configuration completed successfully!
      
      Cluster Information:
      {{ cluster_info.stdout }}
      
      Usage from bastion:
      - kubectl get nodes
      - kubectl get pods --all-namespaces
      - kubectl get services --all-namespaces

- name: "Create kubectl completion script on bastion"
  copy:
    content: |
      # kubectl completion for bash
      source <(kubectl completion bash)
      
      # kubectl completion for zsh
      source <(kubectl completion zsh)
    dest: "{{ ansible_env.HOME }}/.kube/kubectl-completion.sh"
    mode: '0644'

- name: "Create kubectl alias and environment setup"
  copy:
    content: |
      # Kubernetes kubectl configuration
      export KUBECONFIG={{ ansible_env.HOME }}/.kube/config
      alias k='kubectl'
      alias kg='kubectl get'
      alias kd='kubectl describe'
      alias kl='kubectl logs'
      alias kex='kubectl exec -it'
      
      # Source completion if available
      if [ -f {{ ansible_env.HOME }}/.kube/kubectl-completion.sh ]; then
          source {{ ansible_env.HOME }}/.kube/kubectl-completion.sh
      fi
    dest: "{{ ansible_env.HOME }}/.kube/kubectl-env.sh"
    mode: '0644'

- name: "Display bastion setup instructions"
  debug:
    msg: |
      üìù Bastion setup instructions:
      
      To enable kubectl environment, add to your shell profile:
      
      For bash (~/.bashrc):
      source {{ ansible_env.HOME }}/.kube/kubectl-env.sh
      
      For zsh (~/.zshrc):
      source {{ ansible_env.HOME }}/.kube/kubectl-env.sh
      
      Or run manually:
      source {{ ansible_env.HOME }}/.kube/kubectl-env.sh 