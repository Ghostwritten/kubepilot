apiVersion: kubeadm.k8s.io/v1beta4
kind: ClusterConfiguration
kubernetesVersion: v{{ kube_version }}
imageRepository: {{ registry_host }}
networking:
  podSubnet: {{ kube_pod_cidr }}
  serviceSubnet: {{ kube_service_cidr }}
controlPlaneEndpoint: "{{ hostvars[groups['kube_control_plane'][0]].ansible_host }}:6443"
etcd:
  local:
    imageRepository: {{ registry_host | default(kube_image_repo) }}
    imageTag: "{{ etcd_version }}"
dns:
  imageRepository: {{ registry_host | default(kube_image_repo) }}
  imageTag: "{{ coredns_version }}"
apiServer:
  certSANs:
{% for host in groups['kube_control_plane'] %}
    - "{{ hostvars[host].ansible_host }}"
    - "{{ host }}"
{% endfor %}
    - "{{ kube_apiserver_advertise_address }}"
    - "127.0.0.1"
    - "localhost"
  extraArgs:
    - name: "bind-address"
      value: "0.0.0.0"
controllerManager:
  extraArgs:
    - name: "bind-address"
      value: "0.0.0.0"
scheduler:
  extraArgs:
    - name: "bind-address"
      value: "0.0.0.0"
---
apiVersion: kubeadm.k8s.io/v1beta4
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: "{{ hostvars[groups['kube_control_plane'][0]].ansible_host }}"
  bindPort: 6443
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
cgroupDriver: systemd
serverTLSBootstrap: true
rotateCertificates: true
protectKernelDefaults: false
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
mode: "iptables"
