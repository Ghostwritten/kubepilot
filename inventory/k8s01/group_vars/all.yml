# =============================================================================
# KubePilot - Advanced Kubernetes Cluster Deployment Configuration
# =============================================================================
# Project: kubepilot - Next-generation Kubernetes cluster automation
# Purpose: Surpass kubespray with enhanced features and simplified management
# =============================================================================

# -----------------------------------------------------------------------------
# Global Settings & Feature Flags
# -----------------------------------------------------------------------------
# Offline deployment configuration
offline_mode: true
http_server: "http://192.168.22.117"

# Proxy configuration for online mode
http_proxy: "http://192.168.21.101:7890"
https_proxy: "http://192.168.21.101:7890"
no_proxy: "10.0.0.0/8,192.168.16.0/20,localhost,127.0.0.1,registry.ocp.local,registry.test.local,.svc,.svc.cluster-27,.coding.net,.tencentyun.com,.myqcloud.com,harbor.bsgchina.com"

# -----------------------------------------------------------------------------
# Ansible Connection Configuration
# -----------------------------------------------------------------------------
# SSH connection settings
ansible_user: appuser
ansible_ssh_pass: "1qaz@WSX"
ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
ansible_ssh_pipelining: true

# Privilege escalation
ansible_become: true
ansible_become_method: sudo
ansible_become_user: root

# Connection optimization
ansible_ssh_retries: 3
ansible_connect_timeout: 30
ansible_command_timeout: 30

# Python interpreter path (prevents interpreter discovery warnings)
ansible_python_interpreter: /usr/bin/python3

# -----------------------------------------------------------------------------
# Core Kubernetes Configuration
# -----------------------------------------------------------------------------
# Kubernetes binary version - supports latest stable releases
kube_version: "1.31.9"
kube_version_major_minor: "{{ kube_version.split('.')[0] }}.{{ kube_version.split('.')[1] }}"
kube_version_full: "1.31.9-150500.1.1"

# Installation directories
bin_dir: /usr/local/bin
k8s_config_dir: /etc/kubernetes
k8s_manifests_dir: /etc/kubernetes/manifests

# Architecture and platform settings
image_arch: "amd64"
k8s_download_arch: "x86_64"

# -----------------------------------------------------------------------------
# Container Runtime and Tools Versions
# -----------------------------------------------------------------------------
# Container runtime components
containerd_version: "1.7.27"
containerd_use_systemd_cgroup: true
containerd_max_container_log_line_size: 16384
containerd_storage_dir: "/var/lib/containerd"
containerd_state_dir: "/run/containerd"

# Network plugins
cni_version: "v1.7.1"
cni_download_dir: "/opt/cni"

# Container runtime component versions
runc_version: "1.2.4"
nerdctl_version: "2.1.2"
crictl_version: "v1.33.0"

# Additional tools and components
helm_version: "v3.18.5"
etcd_version: "3.5.21-0"
coredns_version: "v1.11.1"

# Network plugin
calico_version: "v3.26.1"

# Additional tools (for download role)
hpn_version: "v1.1"

# Container image settings
pod_infra_image_repo: "{{ kube_image_repo }}/pause"
pod_infra_image_tag: '3.10'

# -----------------------------------------------------------------------------
# Download Sources and Mirrors
# -----------------------------------------------------------------------------
# Primary Kubernetes download source (official or mirror)
kube_download_mirror: "https://dl.k8s.io"
# Alternative mirror for China users:
# kube_download_mirror: "https://mirrors.aliyun.com/kubernetes"

# GitHub download mirror
github_download_mirror: "https://github.com"

# Image registry configuration
kube_image_repo: "registry.k8s.io"
registry_host: "registry.test.local:5000"

# -----------------------------------------------------------------------------
# Offline Deployment Configuration
# -----------------------------------------------------------------------------
offline_k8s_download_dir: "{{ playbook_dir }}/../download"

# Local package repositories for offline mode
repository:
  yum_url: "{{ http_server }}/rpms"
  apt_url: "{{ http_server }}/debs"
  suse_url: "{{ http_server }}/zypper"

# Offline download URLs
files_repo: "{{ http_server }}/files"
kubeadm_download_url: "{{ files_repo }}/kubeadm"
kubectl_download_url: "{{ files_repo }}/kubectl"
kubelet_download_url: "{{ files_repo }}/kubelet"
crictl_download_url: "{{ files_repo }}/crictl-{{ crictl_version }}-linux-{{ image_arch }}.tar.gz"
runc_download_url: "{{ files_repo }}/runc.{{ image_arch }}"
containerd_download_url: "{{ files_repo }}/containerd-{{ containerd_version }}-linux-{{ image_arch }}.tar.gz"
nerdctl_download_url: "{{ files_repo }}/nerdctl-{{ nerdctl_version }}-linux-{{ image_arch }}.tar.gz"

# -----------------------------------------------------------------------------
# Network Proxy Configuration
# -----------------------------------------------------------------------------
# Environment variables for proxy configuration
proxy_env:
  http_proxy: "{{ http_proxy | default('') }}"
  https_proxy: "{{ https_proxy | default('') }}"
  no_proxy: "{{ no_proxy | default('') }}"

# -----------------------------------------------------------------------------
# Container Registry Configuration
# -----------------------------------------------------------------------------
# Insecure registries (for development/testing)
containerd_insecure_registries:
  "registry.test.local:5000": "http://registry.test.local:5000"

# Registry mirrors for improved download performance
containerd_registries_mirrors:
  - prefix: registry.test.local:5000
    skip_verify: true
    mirrors:
      - host: http://registry.test.local:5000
        capabilities: ["pull", "resolve"]
        skip_verify: true

# -----------------------------------------------------------------------------
# Kubernetes Cluster Network Configuration
# -----------------------------------------------------------------------------
# Pod subnet (CIDR notation)
kube_pod_cidr: "10.88.0.0/16"

# Service subnet (CIDR notation)
kube_service_cidr: "10.96.0.0/12"

# API server advertise address (dynamically set to first control plane node)
kube_apiserver_advertise_address: "{{ hostvars[groups['kube_control_plane'][0]].ansible_host }}"

# Additional network settings
kube_apiserver_port: 6443
kube_apiserver_bind_port: 6443

# DNS configuration
dns_domain: cluster.local
dns_servers:
  - 8.8.8.8
  - 8.8.4.4
  - 114.114.114.114

# -----------------------------------------------------------------------------
# Cluster Configuration
# -----------------------------------------------------------------------------
# Cluster-wide variables
cluster_name: kubepilot-cluster

# Feature gates
feature_gates: ["EphemeralContainers=true", "HPAScaleToZero=true", "InPlacePodVerticalScaling=true"]

# -----------------------------------------------------------------------------
# Node Role Configuration
# -----------------------------------------------------------------------------
# Control plane specific variables
k8s_role: master
etcd_member: true

# etcd specific configuration
etcd_cluster_setup: true
etcd_backup_enabled: true

# Worker node specific variables
kubelet_max_pods: 110

# -----------------------------------------------------------------------------
# System Configuration
# -----------------------------------------------------------------------------
# Feature flags - 当前已实现的功能
enable_metrics_server: true

# Logging configuration
log_level: 2  # 统一为数字格式，与inventory.ini保持一致
audit_log_enabled: false

# -----------------------------------------------------------------------------
# Kubelet Configuration Overrides (Optional)
# -----------------------------------------------------------------------------
# These settings override the defaults in roles/kubernetes/defaults/main.yml
# Uncomment and modify as needed for your environment

# kubelet_max_pods: 150  # Override default max pods
# kubelet_system_reserved:
#   cpu: "200m"
#   memory: "200Mi"
#   ephemeral-storage: "2Gi"
# kubelet_kube_reserved:
#   cpu: "200m"
#   memory: "200Mi"
#   ephemeral-storage: "2Gi"

# -----------------------------------------------------------------------------
# Time Synchronization
# -----------------------------------------------------------------------------
ntp_servers:
  - 192.168.22.117

# -----------------------------------------------------------------------------
# Node Labels Configuration
# -----------------------------------------------------------------------------
# Custom node labels for worker nodes
node_labels:
  environment: "production"
  zone: "zone-1"
  instance-type: "standard"
  # Add more custom labels as needed
  # storage: "ssd"
  # gpu: "nvidia"

# -----------------------------------------------------------------------------
# 已移除的未使用变量说明
# -----------------------------------------------------------------------------
# 以下变量已被移除，因为它们未被项目中的任何角色或任务使用：
# - kubepilot_version: 只在download角色中被错误引用，实际未使用
# - kubepilot_build_date: 从未被使用
# - enable_ingress_nginx: 功能未实现
# - enable_cert_manager: 功能未实现  
# - enable_prometheus: 功能未实现
# - enable_grafana: 功能未实现
# - backup_enabled: 功能未实现
# - backup_schedule: 功能未实现
# - backup_retention_days: 功能未实现
# - rbac_enabled: 功能未实现
# - network_policy_enabled: 功能未实现
# - pod_security_policy_enabled: 功能未实现
# - systemd_dir: 未找到使用
# - system_namespace: 未找到使用
# - alt_arch_mapping: 在roles/download/defaults/main.yml中已有定义，避免重复

